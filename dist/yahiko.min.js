"use strict";function _classCallCheck(t,i){if(!(t instanceof i))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function t(t,i){for(var e=0;e<i.length;e++){var s=i[e];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(t,s.key,s)}}return function(i,e,s){return e&&t(i.prototype,e),s&&t(i,s),i}}();!function(t,i,e){var s="yahiko",n={loop:!1,useDots:!1,useTimer:!1,slideTimeout:6e3,preAnimationTime:150,moveTime:300,el:""+s,item:s+"__item",dots:s+"__dots",dot:s+"__dot",inner:s+"__inner",tracker:s+"__tracker",navNext:s+"__next",navPrev:s+"__prev",itemActive:s+"__active",preContainer:s+"__precontainer",stage:s+"__stage",transition:s+"__transition",dotCurrent:s+"__dot_current",transforms:{webkitTransform:"-webkit-transform",OTransform:"-o-transform",msTransform:"-ms-transform",MozTransform:"-moz-transform",transform:"transform"},transitionEnd:{WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd otransitionend",msTransition:"MSTransitionEnd",transition:"transitionend"}},o=function(){function i(t,e){_classCallCheck(this,i),this.index=0,this.cacheObjects(t,e),this.numerateItems(),this.initDots(),this.bindEvents(),this.createTracker(),this.displayNav(),this.createPreSliders(),this.createStages(),this.setStage(),this.setSize(),this.setCurrIndex(0),this.triggerSelectItem(this.index),this.setInitialHeight()}return _createClass(i,[{key:"getPrefixed",value:function(t){var i=document.createElement("p").style,e=["Webkit","Moz","O","ms"],s=void 0;return""==i[t]?t:(t=t.charAt(0).toUpperCase()+t.slice(1),e.forEach(function(e){s=e+t,""==i[s]&&(t=s)}),t)}},{key:"has3d",value:function(){var t=document.createElement("p"),i=void 0,s=this.options.transforms;document.body.insertBefore(t,null);for(var n in s)t.style[n]!==e&&(t.style[n]="translate3d(1px, 1px, 1px)",i=window.getComputedStyle(t).getPropertyValue(s[n]));return document.body.removeChild(t),i!==e&&i.length>0&&"none"!==i}},{key:"addEvent",value:function(t,i,e,s){i&&(t.addEventListener?t.addEventListener(i,e,!!s):t.attachEvent("on"+i,e))}},{key:"bindTransitionEnd",value:function(t){var i=t.data();if(!i.tEnd){var e=t[0],s=this.options.transitionEnd;this.addEvent(e,s[this.getPrefixed("transition")],function(t){i.tProp&&t.propertyName.match(i.tProp)&&i.onEndFn()}),i.tEnd=!0}}},{key:"afterTransition",value:function(t,i,e,s){var n=void 0,o=t.data();o&&(o.onEndFn=function(){n||(n=!0,clearTimeout(o.tT),s())},o.tProp=i,clearTimeout(o.tT),o.tT=setTimeout(function(){o.onEndFn()},1.5*e),this.bindTransitionEnd(t))}},{key:"cacheObjects",value:function(i,e){this.stages={prev:0,curr:0,next:0},this.$activeDot=t({}),this.options=t.extend({},n,e),this.isMoved=!1,this.$activeSlide=null,this.$nullBox=t("<div>"),this.$dotsBox=t({}),this.$el=i,this.$els=i.find("."+this.options.item),this.$inner=i.find("."+this.options.inner),this.$navNext=i.find("."+this.options.navNext),this.$navPrev=i.find("."+this.options.navPrev),this.transform=this.getPrefixed("transform"),this.has3d=this.has3d()}},{key:"disableSelection",value:function(){}},{key:"triggerSelectItem",value:function(t){this.$el.trigger("yahiko:select",[t,this.$els.eq(t)])}},{key:"bindEvents",value:function(){t(window).on("resize",this.onResize.bind(this)),this.disableSelection(this.$el[0]),this.$els.length>1&&(this.$dotsBox.on("click","."+this.options.dot+":not(."+this.options.dotCurrent+")",this.onDotClick.bind(this)),this.$el.on("mouseenter",this.onMouseEnter.bind(this)),this.$el.on("mouseleave",this.onMouseLeave.bind(this)),this.$navNext.click(this.onClickNext.bind(this)),this.$navPrev.click(this.onClickPrev.bind(this)),this.$navNext.mouseenter(this.onShowNextPrePanel.bind(this)),this.$navNext.mouseleave(this.onHideNextPrePanel.bind(this)),this.$navPrev.mouseenter(this.onShowPrevPrePanel.bind(this)),this.$navPrev.mouseleave(this.onHidePrevPrePanel.bind(this)))}},{key:"initDots",value:function(){this.$els.length>1&&this.options.useDots&&(this.createDots(),this.setActiveDot(0),this.startTimer())}},{key:"createStages",value:function(){this.$prevStage=t("<div>").addClass(this.options.stage+" "+this.options.stage+"_prev").appendTo(this.$tracker),this.$currStage=t("<div>").addClass(this.options.stage+" "+this.options.stage+"_curr").appendTo(this.$tracker),this.$nextStage=t("<div>").addClass(this.options.stage+" "+this.options.stage+"_next").appendTo(this.$tracker)}},{key:"setStage",value:function(){this.stages={prev:this.getPrevIndex(),curr:this.index,next:this.getNextIndex()},this.$prevStage.append(this.$els.eq(this.stages.prev)),this.$nextStage.append(this.$els.eq(this.stages.next)),this.$currStage.append(this.$els.eq(this.stages.curr))}},{key:"getPrevIndex",value:function(){return 0===this.index?this.count:this.index-1}},{key:"getNextIndex",value:function(){return this.index===this.count?0:this.index+1}},{key:"setCurrIndex",value:function(t){t===this.count+1?this.index=0:0>t?this.index=this.count:this.index=t}},{key:"numerateItems",value:function(){for(var t=0;t<this.$els.length;t++)this.$els.eq(t).addClass(this.options.item+"-"+t)}},{key:"createPreSliders",value:function(){this.$els.appendTo(this.$nullBox),this.$preSliders=this.$els.clone().hide(),this.$preContainer=t("<div>").addClass(this.options.preContainer).append(this.$preSliders).insertAfter(this.$tracker),this.$preContainer.hide()}},{key:"startTimer",value:function(){this.options.useTimer&&(this.timeoutCallback=setTimeout(function(){this.setCurrIndex(this.index+1),this.triggerSelectItem(this.index),this.move(this.index,1),this.setActiveDot(this.index),this.displayNavByIndex(),this.startTimer()}.bind(this),this.options.slideTimeout))}},{key:"createTracker",value:function(){var i=this.$inner.children();this.count=this.$els.length-1,this.$tracker=t("<div>").append(i).appendTo(this.$inner),this.$tracker.addClass(this.options.tracker)}},{key:"onResize",value:function(){this.setSize(),this.setInitialHeight()}},{key:"setSize",value:function(){this.options.preContainerOffset=this.$preContainer.width(),this.trackerWidth=this.$el.width(),this.preContainerCenter=this.trackerWidth/2-this.options.preContainerOffset/2,this.$tracker.width(this.trackerWidth),this.$els.width(this.trackerWidth),this.$preSliders.width(this.trackerWidth),this.$inner.width(this.trackerWidth),this.$prevStage.css({left:-this.trackerWidth}),this.$nextStage.css({left:this.trackerWidth})}},{key:"onShowPrevPrePanel",value:function(){(this.index>0||this.options.loop)&&(this.$preContainer.show().css({left:-this.options.preContainerOffset,right:""}).stop().animate({left:0},this.options.preAnimationTime).data("move","left"),this.$activeSlide&&this.$activeSlide.hide(),this.$activeSlide=this.$preSliders.eq(this.getPrevIndex()),this.$activeSlide.show().css({left:-this.preContainerCenter}))}},{key:"onHidePrevPrePanel",value:function(){(this.index>0||this.options.loop)&&this.$preContainer.stop().animate({left:-this.options.preContainerOffset},this.options.preAnimationTime,function(){this.$preContainer.hide()}.bind(this))}},{key:"onShowNextPrePanel",value:function(){(this.index<this.count||this.options.loop)&&(this.$preContainer.show().css({right:-this.options.preContainerOffset,left:""}).stop().animate({right:0},this.options.preAnimationTime).data("move","right"),this.$activeSlide&&this.$activeSlide.hide(),this.$activeSlide=this.$preSliders.eq(this.getNextIndex()),this.$activeSlide.show().css({left:-this.preContainerCenter}))}},{key:"onHideNextPrePanel",value:function(){(this.index<this.count||this.options.loop)&&this.$preContainer.stop().animate({right:-this.options.preContainerOffset},this.options.preAnimationTime,function(){this.$preContainer.hide()}.bind(this))}},{key:"onClickNext",value:function(){this.moveByNav(1),this.displayNavByIndex()}},{key:"onClickPrev",value:function(){this.moveByNav(-1),this.displayNavByIndex()}},{key:"displayNav",value:function(){this.options.loop&&this.count>2?(this.$navPrev.show(),this.$navNext.show()):this.displayNavByIndex()}},{key:"displayNavByIndex",value:function(){this.options.loop||(this.index>0?this.$navPrev.show():this.$navPrev.hide(),this.index===this.count?this.$navNext.hide():this.$navNext.show())}},{key:"onMoveEnd",value:function(){this.$tracker.find("."+this.options.item).appendTo(this.$nullBox),this.has3d?(this.$tracker.removeClass(this.options.transition),this.$tracker[0].style[this.transform]="translateX(0)"):this.$tracker.removeClass(this.options.transition).css({left:0}),this.setStage(),this.isMoved=!1}},{key:"moveByNav",value:function(t){this.isMoved||(this.setCurrIndex(this.index+t),this.triggerSelectItem(this.index),this.move(this.index,t),this.setActiveDot(this.index))}},{key:"onMouseEnter",value:function(){clearTimeout(this.timeoutCallback)}},{key:"onMouseLeave",value:function(){this.startTimer()}},{key:"onDotClick",value:function(i){var e=this.$dotsEls.index(t(i.target).closest("."+this.options.dot)),s=this.index-e>0?-1:1;this.setCurrIndex(e),s>0&&this.stages.next!==this.index?(this.$nextStage.find("."+this.options.item).appendTo(this.$nullBox),this.$nextStage.append(this.$els.eq(this.index))):0>s&&this.stages.prev!==this.index&&(this.$prevStage.find("."+this.options.item).appendTo(this.$nullBox),this.$prevStage.append(this.$els.eq(this.index))),this.move(this.index,s),this.setActiveDot(this.index),this.displayNavByIndex()}},{key:"move",value:function(t,i){this.isMoved=!0;var e=this.$preContainer.data("move"),s={};s[e]=-this.options.preContainerOffset,this.$preContainer.animate(s,this.options.preAnimationTime),this.has3d?(this.$tracker.addClass(this.options.transition),this.$tracker[0].style[this.transform]="translateX("+-i*this.trackerWidth+"px)",this.afterTransition(this.$tracker,"transform",this.options.moveTime,function(){this.onMoveEnd(),console.log("transitionEnd")}.bind(this))):this.$tracker.stop().animate({left:-i*this.trackerWidth+"px"},this.options.moveTime,this.onMoveEnd.bind(this))}},{key:"setInitialHeight",value:function(){this.$inner.height(this.$el.height())}},{key:"setActiveDot",value:function(t){this.options.useDots&&(this.$activeDot.removeClass(this.options.dotCurrent),this.$activeDot=this.$dotsEls.eq(t).addClass(this.options.dotCurrent))}},{key:"createDots",value:function(){var i=document.createDocumentFragment(),e=void 0;this.$dotsBox=t("<ul>").addClass(this.options.dots);for(var s=0,n=this.$els.length;n>s;s++)e=t("<li>").addClass(this.options.dot).append("<i></i>"),i.appendChild(e[0]);this.$dotsBox[0].appendChild(i),this.$dotsEls=this.$dotsBox.find("."+this.options.dot),this.$el.append(this.$dotsBox),this.$dotsBox.width(this.$dotsBox.width()),this.$dotsEls.eq(0).addClass(this.options.dotCurrent),this.$dotsBox.css("marginLeft",-this.$dotsBox.width()/2)}},{key:"destroy",value:function(){}},{key:"on",value:function(){}},{key:"index",value:function(){}}]),i}();t.fn.Yahiko=function(i){return t(this).each(function(){var e=t(this);e.data("Yahiko")?console.log("Yahiko already init",e):e.data("Yahiko",new o(e,i||{}))})}}(jQuery,window,void 0);
//# sourceMappingURL=data:application/json;base64,
